<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xrx:widget xmlns:xrx="http://www.monasterium.net/NS/xrx" xmlns="http://www.w3.org/1999/xhtml"
  xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xf="http://www.w3.org/2002/xforms">
  <xrx:id>tag:www.monasterium.net,2011:/mom/widget/skos-editor</xrx:id>
  <xrx:title>
    <xrx:i18n>
      <xrx:key>skos-editor</xrx:key>
      <xrx:default>skos-editor</xrx:default>
    </xrx:i18n>
  </xrx:title>
  <xrx:subtitle/>
  <xrx:description>This widget provides an interface for editing the Monasterium glossary SKOS-files.</xrx:description>
  <xrx:author>niklas.tscherne@uni-graz.at</xrx:author>
  <xrx:licence> This is a component file of the VdU Software for a Virtual Research Environment for
    the handling of Medieval charters. As the source code is available here, it is somewhere between
    an alpha- and a beta-release, may be changed without any consideration of backward compatibility
    of other parts of the system, therefore, without any notice. This file is part of the VdU
    Virtual Research Environment Toolkit (VdU/VRET). The VdU/VRET is free software: you can
    redistribute it and/or modify it under the terms of the GNU General Public License as published
    by the Free Software Foundation, either version 3 of the License, or (at your option) any later
    version. VdU/VRET is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
    the GNU General Public License for more details. You should have received a copy of the GNU
    General Public License along with VdU/VRET. If not, see http://www.gnu.org/licenses. We expect
    VdU/VRET to be distributed in the future with a license more lenient towards the inclusion of
    components into other systems, once it leaves the active development stage. </xrx:licence>
  <xrx:variables>
    <xrx:variable>
      <xrx:name>$skosfile</xrx:name>
      <xrx:expression>doc(concat(metadata:base-collection-path('controlledVocabulary', 'private'), '/IllUrkGlossar.xml'))</xrx:expression>
    </xrx:variable>
    <xrx:variable>
      <xrx:name>$skoscontent</xrx:name>
      <xrx:expression>$skosfile/atom:entry/atom:content/rdf:RDF</xrx:expression>
    </xrx:variable>
    <xrx:variable>
      <xrx:name>$conceptname</xrx:name>
      <xrx:expression>request:get-parameter("concept", "")</xrx:expression>
    </xrx:variable>
    <xrx:variable>
      <xrx:name>$concept</xrx:name>
      <xrx:expression>concat('#', $conceptname)</xrx:expression>
    </xrx:variable>
  </xrx:variables>
  <xrx:portal>tag:www.monasterium.net,2011:/mom/portal/default</xrx:portal>
  <xrx:init>
    <xrx:processor>
      <xrx:xformsflag>false</xrx:xformsflag>
    </xrx:processor>
  </xrx:init>
<!--  <xrx:csss>
    <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/css/codemirror/lib/codemirror</xrx:resource>
  </xrx:csss>-->
  <xrx:jss>
    <!--<xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/js/codemirror/lib/codemirror</xrx:resource>
    <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/js/codemirror/mode/xml</xrx:resource>-->
    <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/jquery/jquery</xrx:resource>
  </xrx:jss>
  <xrx:divs>
    <xrx:div>
      <xrx:key>title-div</xrx:key>
      <xrx:view>
        <div class="h2">
          <span>SKOS-Editor</span>
        </div>
      </xrx:view>
    </xrx:div>
    <xrx:div>
      <xrx:key>no-file-div</xrx:key>
      <xrx:view>
        <p style="color:red;">
          <b>There is no glossary file available for this account. Please begin by selecting and copying one from the index search.</b>
        </p>
      </xrx:view>
    </xrx:div>
    <xrx:div>
      <xrx:key>select-concept-div</xrx:key>
      <xrx:view>
        <p>
          <xrx:i18n>
            <xrx:key>skos-select-concept</xrx:key>
            <xrx:default>Choose an existing SKOS concept, or create a new one in the field below.</xrx:default>
          </xrx:i18n>
        </p>
          <!--makes list out of all skos:Concept/@rdf:about entries, without the #-->
          <select id="concept-select">
            {
            for $subject in $skoscontent//skos:Concept/@rdf:about/data()
            order by $subject
            let $concept := substring($subject, 2)
            return
            <option value="{$concept}">{$concept}</option>
            }
            <option selected="selected" disabled="disabled" hidden="hidden">
              <xrx:i18n>
                <xrx:key>select-concept</xrx:key>
                <xrx:default>Select Concept</xrx:default>
              </xrx:i18n>
            </option>
          </select>
        <p>
          <div id="selected-concept">
            <xrx:i18n>
              <xrx:key>skos-current-concept</xrx:key>
              <xrx:default>The currently selected concept is: </xrx:default>
            </xrx:i18n>
            <span><b>{$conceptname}</b></span>
          </div>
        </p>
        <br/>
        <b>
          <xrx:i18n>
            <xrx:key>create-concept</xrx:key>
            <xrx:default>Create or delete concept:</xrx:default>
          </xrx:i18n>
        </b>
        <p>
          <xrx:i18n>
            <xrx:key>skos-name-concept</xrx:key>
            <xrx:default>To create a new concept, enter a name for it below (avoid spaces and special characters):</xrx:default>
          </xrx:i18n>
        </p>
        <input type="text" id="concept-input" placeholder="FranzoesischeKoenigsurkunden" style="width: 350px;"/>
        <button type="submit" id="add-concept">
          <xrx:i18n>
            <xrx:key>submit</xrx:key>
            <xrx:default>Submit</xrx:default>
          </xrx:i18n>
        </button>
        <br/>
        <p>
          <xrx:i18n>
            <xrx:key>skos-delete-concept</xrx:key>
            <xrx:default>To delete the currently selected concept, click here: </xrx:default>
          </xrx:i18n>
          <button id="delete-concept" type="submit">
            <xrx:i18n>
              <xrx:key>delete</xrx:key>
              <xrx:default>Delete</xrx:default>
            </xrx:i18n>
          </button>
        </p>
      </xrx:view>
    </xrx:div>
    <xrx:div>
      <xrx:key>preflabel-div</xrx:key>
      <xrx:view>
        <hr/>
        <h3>skos:prefLabel</h3>
        <p>
          <xrx:i18n>
            <xrx:key>skos-add-preflabel</xrx:key>
            <xrx:default>Add an optional preferred label (skos:prefLabel) for a selected language to
              the current concept (note that only one preferred label is allowed per
              language - an existing prefLabel will be overwritten):</xrx:default>
          </xrx:i18n>
        </p>
        <select id="lang-select">
          <option value="de">de</option>
          <option value="en">en</option>
          <option value="es">es</option>
          <option value="fr">fr</option>
          <option value="hr">hr</option>
          <option value="hu">hu</option>
          <option value="it">it</option>
        </select>
        <input type="text" id="preflabel-input"/>
        <button type="submit" id="add-label">
          <xrx:i18n>
            <xrx:key>submit</xrx:key>
            <xrx:default>Submit</xrx:default>
          </xrx:i18n>
        </button>
        <div id="existing-entries-pref">
          <p>
            <xrx:i18n>
              <xrx:key>skos-existing-pref</xrx:key>
              <xrx:default>The following preferred labels for this concept already exist:</xrx:default>
            </xrx:i18n>
          </p>
          <table id="pref-table">
            <tr>
              <th>skos:prefLabel</th>
              <th>
                <xrx:i18n>
                  <xrx:key>language</xrx:key>
                  <xrx:default>Language</xrx:default>
                </xrx:i18n>
              </th>
              <th>
                <xrx:i18n>
                  <xrx:key>delete</xrx:key>
                  <xrx:default>Delete</xrx:default>
                </xrx:i18n>
              </th>
            </tr>
            <!--extract all prefLabels for the current concept and enter their content, language & remove-button into the table-->
            {
            for $plabel in $skoscontent/skos:Concept[@rdf:about=$concept]//skos:prefLabel
            return
            <tr>
              <td>{$plabel/text()}</td>
              <td class='lang'>{$plabel/@xml:lang/data()}</td>
              <td>
                <input type="submit" class="remove-preflabel" value="X"/>
              </td>
            </tr>
            }
          </table>
        </div>
      </xrx:view>
    </xrx:div>
    <xrx:div>
      <xrx:key>broader-narrower-div</xrx:key>
      <xrx:view>
        <hr/>
        <h3>skos:broader &amp; skos:narrower</h3>
        <p>
          <xrx:i18n>
            <xrx:key>skos-add-broader-narrower</xrx:key>
            <xrx:default>Optionally, you may add properties which indicate that the selected concept stands in a more general or more specific relationship with another concept (for example, "dog" could have the broader concept "animal"):</xrx:default>
          </xrx:i18n>
        </p>
        
        <p>The current concept has the
          
          <select id="broader-narrower-select">
            <option value="broader">broader</option>
            <option value="narrower">narrower</option>
          </select>
          &#32;concept&#32; 
          <!--makes list out of all skos:Concept/@rdf:about entries, without the #-->
          <select id="broader-narrower-concept-select">
            {
            for $subject in $skoscontent//skos:Concept/@rdf:about/data()
            let $concept := substring($subject, 2)
            return
            <option value="{$concept}">{$concept}</option>
            }
            <option selected="selected" disabled="disabled" hidden="hidden">
              <xrx:i18n>
                <xrx:key>select-concept</xrx:key>
                <xrx:default>Select Concept</xrx:default>
              </xrx:i18n>
            </option>
          </select>
          <!--extract all broader-labels for the current concept and enter their content & remove-button into the table-->
          <button type="submit" id="add-broader-narrower">
            <xrx:i18n>
              <xrx:key>submit</xrx:key>
              <xrx:default>Submit</xrx:default>
            </xrx:i18n>
          </button>
        </p>
        <div id="existing-entries-broader-narrower">
          <p>
            <xrx:i18n>
              <xrx:key>skos-existing-broader-narrower</xrx:key>
              <xrx:default>Existing broader and narrower terms for this concept are listed below. They can be removed by clicking on the "X" button:</xrx:default>
            </xrx:i18n>
          </p>
          <table id="broader-table" style="border: 1px solid;">
            <tr>
              <th>skos:broader</th>
            </tr>
            {
            for $broader in $skoscontent/skos:Concept[@rdf:about=$concept]//skos:broader
            return
            <tr>
              <td>{$broader/@rdf:resource/data()}</td>
              <td>
                <input type="submit" id="remove-broader" class="remove-label" value="X"/>
              </td>
            </tr>
            }
          </table>
          <br/>
          <table id="narrower-table" style="border: 1px solid;">
            <tr>
              <th>skos:narrower</th>
            </tr>
            {
            for $narrower in $skoscontent/skos:Concept[@rdf:about=$concept]//skos:narrower
            return
            <tr>
              <td>{$narrower/@rdf:resource/data()}</td>
              <td>
                <input type="submit" id="remove-narrower" class="remove-label" value="X"/>
              </td>
            </tr>
            }
          </table>
        </div>
      </xrx:view>
    </xrx:div>
    <xrx:div>
      <xrx:key>description-div</xrx:key>
      <xrx:view>
        <hr/>
        <h3>skos:definition</h3>
        <p>
          <xrx:i18n>
            <xrx:key>skos-modify-definition</xrx:key>
            <xrx:default>Enter a description for the concept:</xrx:default>
          </xrx:i18n>
        </p>
        
        <!--fills textarea with the contents of the current concept's definition-->
        <textarea id="editor" name="editor">
          {
          let $concept-def := $skoscontent/skos:Concept[@rdf:about=$concept]/skos:definition/node()
          return $concept-def
          }
        </textarea>
        
        <button style="margin:10px;" id="submit-content" type="submit">
          <xrx:i18n>
            <xrx:key>save</xrx:key>
            <xrx:default>Save definition to file</xrx:default>
          </xrx:i18n>
        </button>
        <button style="margin:10px;float:right" id="release-skos" type="submit">
          <b>
            <xrx:i18n>
              <xrx:key>release-skos</xrx:key>
              <xrx:default>Publish file</xrx:default>
            </xrx:i18n>
          </b>
        </button>
        <div id="submit-messages">
          <div id="submit-msg-suc" style="color:green;display:none;margin:10px">
            <b>
              <xrx:i18n>
                <xrx:key>success</xrx:key>
                <xrx:default>Success</xrx:default>
              </xrx:i18n>
            </b>
          </div>
          <div id="submit-msg-err" style="color:red;display:none;margin:10px">
            <b>
              <xrx:i18n>
                <xrx:key>error</xrx:key>
                <xrx:default>Error</xrx:default>
              </xrx:i18n>
            </b>
          </div>
        </div>
        <div id="release-messages" style="float:right">
          <div id="release-msg-suc" style="color:green;display:none;margin:10px">
            <b>
              <xrx:i18n>
                <xrx:key>success</xrx:key>
                <xrx:default>Success</xrx:default>
              </xrx:i18n>
            </b>
          </div>
          <div id="release-msg-err" style="color:red;display:none;margin:10px">
            <b>
              <xrx:i18n>
                <xrx:key>error</xrx:key>
                <xrx:default>Error</xrx:default>
              </xrx:i18n>
            </b>
          </div>
        </div>
        <script type="text/javascript" src="/bfResources/scripts/ckeditor/ckeditor.js"/>
        <script type="text/javascript">
          
        var url = window.location.href;
        var baseUrl = url.split("?")[0];
        var urlParams = new URLSearchParams(window.location.search);
        var concept = urlParams. get ('concept');
          
        // display current concept only if one is selected
        if (concept === null) $('#selected-concept').hide();
        
        // disable submit button unless text has been added to the input field
        $(':input[id="add-concept"]').prop('disabled', true);
        $('input[id="concept-input"]').keyup(function () {{
            if ($(this).val() != '') {{
                $(':input[id="add-concept"]').prop('disabled', false);
            }}
        }});
        
        // adds concept name as query string to base-URL and goes to result
        $('#concept-select').on('change', function () {{
            var redirectUrl = baseUrl + "?concept=" + $(this).val();
            return (redirectUrl ? window.location = redirectUrl: console.log("Invalid URL!"));
        }});
        
        // gets new concept name from input field and hands it to add-concept service
        $('button#add-concept').click(function () {{
            var conceptName = $('#concept-input').val();
            
            $.ajax({{
                url: "/mom/service/add-concept",
                type: "POST",
                data: conceptName,
                contentType: "application/xml",
                dataType: "text",
                success: function (data) {{
                    url = $(location).attr("href");
                    window.location.href = baseUrl + '?concept=' + conceptName;
                }}
            }})
        }});
        
        $('button#delete-concept').click(function () {{
            $.ajax({{
                url: "/mom/service/remove-concept",
                type: "POST",
                data: concept,
                contentType: "application/xml",
                dataType: "text",
                success: function (data) {{
                    url = $(location).attr("href");
                    window.location.href = baseUrl;
                }}
            }})
        }});
        
        // set the preflabel of the selected language as default content of the input field
        $('#lang-select').change(function () {{
            var labelLang = $('#lang-select').val();
            var currentLangPref = $('#pref-table').find("td:contains(" + labelLang + ")").prev();
            $('#preflabel-input').val(currentLangPref.html());
        }});
        
        // trigger initial display of the above
        $('#lang-select').change();
        
        // disable submit button unless text has been added to the input field
        $(':input[id="add-label"]').prop('disabled', true);
        $('input[id="preflabel-input"]').keyup(function () {{
            if ($(this).val() != '') {{
                $(':input[id="add-label"]').prop('disabled', false);
            }}
        }});
        
        // don't display table with other entries if no other entries exist
        var tbl = $('#pref-table tr');
        if (tbl.length == 1) {{
            $('#existing-entries-pref').hide();
        }}
        
        // function to properly process ampersand
        function htmlDecode(input) {{
            var doc = new DOMParser().parseFromString(input, "text/html");
            return doc.documentElement.textContent;
        }};
        
        // get selected name and language for the preflabel, hand both the add-preflabel service, reload page
        $('button#add-label').click(function () {{
            var labelLang = $('#lang-select').val();
            var labelName = $('#preflabel-input').val();
            var addLabelUrl = htmlDecode("/mom/service/add-preflabel?concept=" + concept + "&amp;lang=" + labelLang);
            
            $.ajax({{
                url: addLabelUrl,
                type: "POST",
                data: labelName,
                contentType: "application/xml",
                dataType: "text",
                success: function (data) {{
                    //$('#existing-entries-pref').load(location.href + ' #existing-entries-pref');
                    window.location.reload();
                }}
            }})
        }});
        
        // get selected name and language for the preflabel, hand both the remove-label service, reload page
        $('input.remove-preflabel').click(function () {{
            var labelLang = $(this).closest('td').prev().html();
            var removeLabelUrl = htmlDecode("/mom/service/remove-label?concept=" + concept + "&amp;lang=" + labelLang);
            
            $.ajax({{
                url: removeLabelUrl,
                success: function (data) {{
                    //$('#existing-entries-pref').load(location.href + ' #existing-entries-pref');
                    window.location.reload();
                }}
            }})
        }});
        
        // don't display div with other entries if no other entries exist
        var tblbr = $('#broader-table tr');
        if (tblbr.length == 1) {{
          $('#broader-table').hide();
        }}
        
        var tblna = $('#narrower-table tr');
        if (tblna.length == 1) {{
          $('#narrower-table').hide();
        }}
        
        // disable submit button unless a selection has been made
        $(':input[id="add-broader-narrower"]').prop('disabled', true);
        $('#broader-narrower-concept-select').change(function () {{
            $(':input[id="add-broader-narrower"]').prop('disabled', false);
        }});
        
        // get input for broader/narrower and hand it to add-broader-narrower service, then reload
        $('button#add-broader-narrower').click(function () {{
            var selectBroaderNarrowerConc = $('#broader-narrower-concept-select').val();
            var selectBroaderNarrower = $('#broader-narrower-select').val();
            var addBroaderNarrowerUrl = htmlDecode("/mom/service/add-broader-narrower?concept=" + concept + "&amp;bn=" + selectBroaderNarrower + "&amp;bnconc=" + selectBroaderNarrowerConc);
            
            $.ajax({{
                url: addBroaderNarrowerUrl,
                type: "POST",
                data: selectBroaderNarrowerConc,
                contentType: "application/xml",
                dataType: "text",
                success: function (data) {{
                    //$('#concept-select').load(location.href + ' existing-entries-broader');
                    window.location.reload();
                }}
            }})
        }});
        
        // delete given broader/narrower with remove-label service, reload
        $('input.remove-label').click(function () {{
            let label = $(this).attr("id").split('remove-')[1];
            var currentBroaderNarrowerName = $(this).closest('td').prev().html().substring(1);
            var removeLabelUrl = htmlDecode("/mom/service/remove-label?concept=" + concept + "&amp;" + label + "=" + currentBroaderNarrowerName);
            
            $.ajax({{
                url: removeLabelUrl,
                success: function (data) {{
                    //$('#concept-select').load(location.href + ' existing-entries-broader');
                    window.location.reload();
                }}
            }})
        }});
        
        CKEDITOR.replace('editor');
        
        $('#release-skos').click(function () {{
            $.ajax({{
                url: "/mom/service/my-collection-release-skos",
                success: function (data) {{
                    $('#release-msg-suc').css({{
                        opacity: 0, display: "block"
                    }}).animate({{
                        opacity: 1
                    }},
                    'slow');
                    $('#release-msg-suc').delay(5000).fadeOut('slow');
                }},
                error: function (data) {{
                    $('#release-msg-err').css({{
                        opacity: 0, display: "block"
                    }}).animate({{
                        opacity: 1
                    }},
                    'slow');
                    $('#release-msg-err').delay(5000).fadeOut('slow');
                }}
            }})
        }});
        
        // submits contents of the textarea to the edit-definition service, reload
        $('button#submit-content').click(function () {{
            var editorContent = CKEDITOR.instances.editor.document.getBody().getHtml();
            
            $.ajax({{
                url: "/mom/service/edit-definition?concept=" + concept,
                type: "PUT",
                contentType: "application/xml",
                data: editorContent,
                dataType: "xml",
                success: function(response) {{
                  if($(response).find("result").text()=='true'){{
                    $('#submit-msg-suc').css({{opacity: 0, display: "inline"}}).animate({{opacity: 1}},'slow');
                    $('#submit-msg-suc').delay(5000).fadeOut('slow');
                  }}
                  else{{
                    $('#submit-msg-err').css({{opacity: 0, display: "inline"}}).animate({{opacity: 1}},'slow');
                    $('#submit-msg-err').delay(5000).fadeOut('slow');
                  }}
                }}
            }})
        }});
        </script>
      </xrx:view>
    </xrx:div>
  </xrx:divs>
  
  <xrx:view>
    <xrx:auth>
      <xrx:rules>
        <xrx:rule>
          <xrx:user/>
          <xrx:role>html-author</xrx:role>
        </xrx:rule>
      </xrx:rules>
      <xrx:true>
        <xrx:view>
          <xrx:div>title-div</xrx:div>
          {
          if (not(exists($skosfile))) then
            <xrx:div>no-file-div</xrx:div>
          else()
          }
          <xrx:div>select-concept-div</xrx:div>
          <xrx:div>preflabel-div</xrx:div>
          <xrx:div>broader-narrower-div</xrx:div>
          <xrx:div>description-div</xrx:div>
        </xrx:view>
      </xrx:true>
      <xrx:false>
        <div>
          <xrx:i18n>
            <xrx:key>protected-page-message</xrx:key>
            <xrx:default>Protected page. Please login first.</xrx:default>
          </xrx:i18n>
        </div>
      </xrx:false>
    </xrx:auth>
  </xrx:view>
</xrx:widget>