<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xrx:widget xmlns:xrx="http://www.monasterium.net/NS/xrx" xmlns="http://www.w3.org/1999/xhtml"
  xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xf="http://www.w3.org/2002/xforms">
  <xrx:id>tag:www.monasterium.net,2011:/mom/widget/skos-editor</xrx:id>
  <xrx:title>
    <xrx:i18n>
      <xrx:key>skos-editor</xrx:key>
      <xrx:default>skos-editor</xrx:default>
    </xrx:i18n>
  </xrx:title>
  <xrx:subtitle/>
  <xrx:description>This application provides an interface for editing the Monasterium glossary SKOS-file.</xrx:description>
  <xrx:author>niklas.tscherne@uni-graz.at</xrx:author>
  <xrx:licence> This is a component file of the VdU Software for a Virtual Research Environment for
    the handling of Medieval charters. As the source code is available here, it is somewhere between
    an alpha- and a beta-release, may be changed without any consideration of backward compatibility
    of other parts of the system, therefore, without any notice. This file is part of the VdU
    Virtual Research Environment Toolkit (VdU/VRET). The VdU/VRET is free software: you can
    redistribute it and/or modify it under the terms of the GNU General Public License as published
    by the Free Software Foundation, either version 3 of the License, or (at your option) any later
    version. VdU/VRET is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
    the GNU General Public License for more details. You should have received a copy of the GNU
    General Public License along with VdU/VRET. If not, see http://www.gnu.org/licenses. We expect
    VdU/VRET to be distributed in the future with a license more lenient towards the inclusion of
    components into other systems, once it leaves the active development stage. </xrx:licence>
  <xrx:variables>
    <xrx:variable>
      <xrx:name>$skosfile</xrx:name>
      <xrx:expression>doc('/db/mom-data/metadata.controlledVocabulary.public/skos.xml')/atom:entry/atom:content/rdf:RDF</xrx:expression>
    </xrx:variable>
    <xrx:variable>
      <xrx:name>$conceptname</xrx:name>
      <xrx:expression>request:get-parameter("concept", "")</xrx:expression>
    </xrx:variable>
    <xrx:variable>
      <xrx:name>$concept</xrx:name>
      <xrx:expression>concat('#', $conceptname)</xrx:expression>
    </xrx:variable>
  </xrx:variables>
  <xrx:portal>tag:www.monasterium.net,2011:/mom/portal/default</xrx:portal>
  <xrx:init>
    <xrx:processor>
      <xrx:xformsflag>true</xrx:xformsflag>
    </xrx:processor>
  </xrx:init>
  <xrx:csss>
    <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/css/codemirror/lib/codemirror</xrx:resource>
    <!--<xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/css/codemirror/theme/cobalt</xrx:resource>-->
  </xrx:csss>
  <xrx:jss>
    <!--<xrx:resource>tag:www.monasterium.net,2011:/mom/resource/js/skos-editor</xrx:resource>-->
    <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/js/codemirror/lib/codemirror</xrx:resource>
    <xrx:resource>tag:www.monasterium.net,2011:/xrx/resource/js/codemirror/mode/xml</xrx:resource>
  </xrx:jss>
  <xrx:divs>
    <xrx:div>
      <xrx:key>title-div</xrx:key>
      <xrx:view>
        <div class="h2">
          <span>SKOS-Editor</span>
        </div>
      </xrx:view>
    </xrx:div>
    <xrx:div>
      <xrx:key>select-concept-div</xrx:key>
      <xrx:view>
        <p>Wählen Sie ein existierendes SKOS-Konzept, oder legen sie im unteren Feld ein neues an:</p>
        <!--makes list out of all skos:Concept/@rdf:about entries, without the #-->
        <select id="concept-select">
          {
          for $subject in $skosfile//skos:Concept/@rdf:about/data()
          let $concept := substring($subject, 2)
          return
          <option value="{$concept}">{$concept}</option>
          }
          <option selected="selected" disabled="disabled" hidden="hidden">Konzept auswählen</option>
        </select>
        <br/>
        <br/>
        <p>Vermeiden Sie im Namen für das neue Konzept Leerzeichen, Sonderzeichen und Umlaute:</p>
        <input type="text" id="concept-input" placeholder="FranzoesischeKoenigsurkunden" style="width: 350px;"/>
        <input type="submit" id="add-concept" value="Konzept anlegen"/>
        <script type="text/javascript">
          // extracts monasterium.net/mom/skos-editor as base-URL
          var url = window.location.href;
          var baseUrl = url.split("?")[0];
          
          // adds concept name as query string to base-URL and goes to result
          $('#concept-select').on('change', function () {{
            var redirectUrl = baseUrl + "?concept=" + $(this).val();
            return (redirectUrl ? window.location = redirectUrl : console.log("Invalid URL!"));
          }});
          
          // gets new concept name from input field and hands it to add-concept service
          $('input#add-concept').click(function() {{
            var conceptName = document.getElementById("concept-input").value;
            
            $.ajax({{
            url: "/mom/service/add-concept",
            type: "POST",
            data: conceptName,
            contentType: "application/xml",
            dataType: "text"
            }})
            
            // reload after running service
            window.location.reload();
          }});
        </script>
      </xrx:view>
    </xrx:div>
    <xrx:div>
      <xrx:key>preflabel-div</xrx:key>
      <xrx:view>
        <hr/>
        <h3>skos:prefLabel</h3>
        <p>Geben Sie optional für das Konzept einen bevorzugten Namen (<i>skos:prefLabel</i>) in der gewünschten Sprache ein
          (beachten Sie, dass nur ein bevorzugter Name pro Sprache erlaubt ist - der bestehende Name wird überschrieben):</p>
        <input type="text" id="preflabel-input" placeholder="acte écrit"/>
        <select id="lang-select">
          <option value="deu">deu</option>
          <option value="eng">eng</option>
          <option value="est">est</option>
          <option value="fra">fra</option>
          <option value="hrv">hrv</option>
          <option value="hun">hun</option>
          <option value="ita">ita</option>
          <option value="slk">slk</option>
          <option value="slv">slv</option>
        </select>
        <input type="submit" id="add-label" value="Hinzufügen"/>
        <div id="existing-entries-pref">
          <p>Folgende bevorzugte Namen für dieses Konzept existieren bereits:</p>
          <table id="table-pref">
            <tr>
              <th>skos:prefLabel</th>
              <th>Sprache</th>
              <th>Entfernen</th>
            </tr>
            <!--extract all prefLabels for the current concept and enter their content, language & remove-button into the table-->
            {
            for $plabel in $skosfile/skos:Concept[@rdf:about=$concept]//skos:prefLabel
            return
            <tr>
              <td>{$plabel/text()}</td>
              <td>{$plabel/@xml:lang/data()}</td>
              <td>
                <input type="submit" class="remove-preflabel" value="X"/>
              </td>
            </tr>
            }
          </table>
        </div>
        <script type="text/javascript">
          // don't display div with other entries if no other entries exist
          var tbl = document.getElementById('table-pref');
          if (tbl.rows.length == 1) {{
            document.getElementById('existing-entries-pref').style.display = "none";
          }}
          
          // extracts monasterium.net/mom/skos-editor as base-URL
          var urlParams = new URLSearchParams(window.location.search);
          var concept = urlParams.get('concept');
          
          function htmlDecode(input) {{
            var doc = new DOMParser().parseFromString(input, "text/html");
            return doc.documentElement.textContent;
          }};
          
          // get selected name and language for the preflabel, hand both the add-preflabel service, reload page 
          $('input#add-label').click(function() {{
            var labelLang = document.getElementById("lang-select").value;
            var labelName = document.getElementById("preflabel-input").value;
            
            var addLabelUrl = htmlDecode("/mom/service/add-preflabel?concept=" + concept + "&amp;lang=" + labelLang);
            
              $.ajax({{
              url: addLabelUrl,
              type: "POST",
              data: labelName,
              contentType: "application/xml",
              dataType: "text"
              }})
              
            window.location.reload();
          }});
          
          // get selected name and language for the preflabel, hand both the remove-label service, reload page
          $('input.remove-preflabel').click(function() {{
            var labelLang = $(this).closest('td').prev().html();
            
            var removeLabelUrl = htmlDecode("/mom/service/remove-label?concept=" + concept + "&amp;lang=" + labelLang);
          
              $.ajax({{
              url: removeLabelUrl
              }})
              
            window.location.reload();
          }});
        </script>
      </xrx:view>
    </xrx:div>
    <xrx:div>
      <xrx:key>broader-div</xrx:key>
      <xrx:view>
        <hr/>
        <h3>skos:broader</h3>
        <p>Weisen Sie dem Konzept optional einen Oberbegriff (<i>skos:broader</i>) zu:</p>
        <!--makes list out of all skos:Concept/@rdf:about entries, without the #-->
        <select id="broader-select">
          {
          for $subject in $skosfile//skos:Concept/@rdf:about/data()
          let $concept := substring($subject, 2)
          return
          <option value="{$concept}">{$concept}</option>
          }
          <option selected="selected" disabled="disabled" hidden="hidden">Konzept auswählen</option>
        </select>
        <!--extract all broader-labels for the current concept and enter their content & remove-button into the table-->
        <input type="submit" id="add-broader" value="Hinzufügen"/>
        <div id="existing-entries-broader">
          <p>Folgende Oberbegriffe für dieses Konzept existieren bereits:</p>
          <table id="table-broader">
            <tr>
              <th>skos:broader</th>
              <th>Entfernen</th>
            </tr>
            {
            for $broader in $skosfile/skos:Concept[@rdf:about=$concept]//skos:broader
            return
            <tr>
              <td>{$broader/@rdf:resource/data()}</td>
              <td>
                <input type="submit" class="remove-broader" value="X"/>
              </td>
            </tr>
            }
          </table>
        </div>
        <script>
          // don't display div with other entries if no other entries exist
          var tbl = document.getElementById('table-broader');
          if (tbl.rows.length == 1) {{
            document.getElementById('existing-entries-broader').style.display = "none";
          }}
          
          // get input for broader and hand it to add-broader service, then reload
          $('input#add-broader').click(function() {{
            var broaderName = document.getElementById("broader-select").value;
          
            var addBroaderUrl = htmlDecode("/mom/service/add-broader?concept=" + concept);
          
            $.ajax({{
            url: addBroaderUrl,
            type: "POST",
            data: broaderName,
            contentType: "application/xml",
            dataType: "text"
            }})
          
            window.location.reload();
          }});
          
          // delete given broader with remove-label service, reload
          $('input.remove-broader').click(function() {{
            var broaderName = $(this).closest('td').prev().html().substring(1);
          
            var removeLabelUrl = htmlDecode("/mom/service/remove-label?concept=" + concept + "&amp;broader=" + broaderName);
                      
            $.ajax({{
              url: removeLabelUrl
            }})
          
            window.location.reload();
          }});
        </script>
      </xrx:view>
    </xrx:div>
    <xrx:div>
      <xrx:key>description-div</xrx:key>
      <xrx:view>
        <hr/>
        <h3>skos:definition</h3>
        <p>Geben Sie innerhalb der <i>skos:definition</i>-Tags die HTML-codierte Beschreibung für das Konzept ein:</p>
        <!--fills textarea with the contents of the current concept's definition-->
        <textarea id="editor">
          {
          let $concept := $skosfile/skos:Concept[@rdf:about=$concept]/skos:definition
          return $concept
          }
        </textarea>
        <input id="submit-content" type="submit" value="Submit!"/>
        <script type="text/javascript">
          // link codemirror to textarea
          var editor = CodeMirror.fromTextArea(document.getElementById('editor'), {{
            mode: 'xml',
            htmlMode: true,
            lineNumbers: true
          }});
          editor.setSize("750", "250");
          
          // submits contents of the textarea to the edit-definition service, reload
          $('input#submit-content').click(function() {{
            var editorContent = editor.getValue();
            
            $.ajax({{
              url: "/mom/service/edit-definition?concept=" + concept,
              type: "PUT",
              contentType: "application/xml",
              data: editorContent,
              dataType: "xml"
            }})
            
            window.location.reload();
          }});
        </script>
      </xrx:view>
    </xrx:div>
  </xrx:divs>
  
  <xrx:view>
    <xrx:auth>
      <xrx:rules>
        <xrx:rule>
          <xrx:user/>
          <xrx:role>html-author</xrx:role>
        </xrx:rule>
      </xrx:rules>
      <xrx:true>
        <xrx:view>
          <xrx:div>title-div</xrx:div>
          <xrx:div>select-concept-div</xrx:div>
          <xrx:div>preflabel-div</xrx:div>
          <xrx:div>broader-div</xrx:div>
          <xrx:div>description-div</xrx:div>
        </xrx:view>
      </xrx:true>
      <xrx:false>
        <div>
          <xrx:i18n>
            <xrx:key>protected-page-message</xrx:key>
            <xrx:default>Protected page. Please login first.</xrx:default>
          </xrx:i18n>
        </div>
      </xrx:false>
    </xrx:auth>
  </xrx:view>
</xrx:widget>